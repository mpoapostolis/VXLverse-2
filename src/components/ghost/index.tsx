/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t ghost.glb
*/

import { useStore } from "@/lib/store"
import { Capsule, useAnimations, useGLTF } from "@react-three/drei"
import { RigidBody } from "@react-three/rapier"
import { useEffect, useRef } from "react"
import * as THREE from "three"
import { GLTF } from "three-stdlib"

type GLTFResult = GLTF & {
  nodes: {
    Object_10: THREE.SkinnedMesh
    Object_11: THREE.SkinnedMesh
    Object_12: THREE.SkinnedMesh
    Object_13: THREE.SkinnedMesh
    Object_7: THREE.SkinnedMesh
    Object_9: THREE.SkinnedMesh
    GLTF_created_0_rootJoint: THREE.Bone
  }
  materials: {
    ["Book_Pages.001"]: THREE.MeshStandardMaterial
    ["Ghost_Sheet.001"]: THREE.MeshStandardMaterial
    ["Eyes.001"]: THREE.MeshStandardMaterial
    ["Eye_Highlights.001"]: THREE.MeshStandardMaterial
    ["Legs.001"]: THREE.MeshStandardMaterial
    ["Book_cover.001"]: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ActionName =
  | "a_walkn_moderate_GLTF_created_0"
  | "Armature.001Action_GLTF_created_0"
  | "Armature.001Action"
  | "Take 001_Object_4"
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

export function Ghost(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF("/ghost.glb") as GLTFResult
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    console.log(actions)
    actions["Armature.001Action_GLTF_created_0"].play()
  }, [actions])
  const store = useStore()
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <RigidBody
          type="fixed"
          colliders="cuboid"
          onCollisionEnter={() => {
            store.setDialog("Don't forget to pick up your repaired watch from Emma at the convenience store.")
          }}
        >
          <Capsule position={[0, 1, 0]} args={[1.2, 2, 1]}>
            <meshStandardMaterial transparent opacity={0} />
          </Capsule>
        </RigidBody>
        <group name="Ghost_Boy">
          <group name="GLTF_created_0" position={[0, 1, 0]}>
            <primitive object={nodes.GLTF_created_0_rootJoint} />
            <group name="Cylinder_12" />
            <group name="Plane_13" />
            <skinnedMesh
              name="Object_10"
              geometry={nodes.Object_10.geometry}
              material={materials["Book_Pages.001"]}
              skeleton={nodes.Object_10.skeleton}
            />
            <skinnedMesh
              name="Object_11"
              geometry={nodes.Object_11.geometry}
              material={materials["Ghost_Sheet.001"]}
              skeleton={nodes.Object_11.skeleton}
            />
            <skinnedMesh
              name="Object_12"
              geometry={nodes.Object_12.geometry}
              material={materials["Eyes.001"]}
              skeleton={nodes.Object_12.skeleton}
            />
            <skinnedMesh
              name="Object_13"
              geometry={nodes.Object_13.geometry}
              material={materials["Eye_Highlights.001"]}
              skeleton={nodes.Object_13.skeleton}
            />
            <skinnedMesh
              name="Object_7"
              geometry={nodes.Object_7.geometry}
              material={materials["Legs.001"]}
              skeleton={nodes.Object_7.skeleton}
            />
            <skinnedMesh
              name="Object_9"
              geometry={nodes.Object_9.geometry}
              material={materials["Book_cover.001"]}
              skeleton={nodes.Object_9.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload("/ghost.glb")
