/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei"
import * as THREE from "three"
import { GLTF } from "three-stdlib"

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube003: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

export function Floor(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/untitled.glb") as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials.Material}
        rotation={[0, 0, -Math.PI]}
        scale={[28.195, 0.056, 16.457]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={nodes.Cube001.material}
        position={[0, 3.949, -13.203]}
        rotation={[-1.487, 0.027, -0.024]}
        scale={[13.213, 3.412, 3.416]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={nodes.Cube002.material}
        position={[0, 3.949, 7.36]}
        rotation={[-1.487, 0.027, -0.024]}
        scale={[13.213, 3.412, 3.416]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={nodes.Cube003.material}
        position={[-3.148, 2.494, -2.717]}
        rotation={[-1.487, 0.027, -0.024]}
        scale={[13.207, 3.4, 0.72]}
      />
    </group>
  )
}

useGLTF.preload("/untitled.glb")
